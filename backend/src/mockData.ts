import { LorryReceipt, Invoice, Payment, LorryReceiptStatus, GstPayableBy, GstType, PaymentType, PaymentMode } from '../../types';

export const mockLorryReceipts: LorryReceipt[] = [
  {
    id: 1,
    date: '2024-07-15',
    reportingDate: '2024-07-20',
    deliveryDate: '2024-07-21',
    consignorId: 1,
    consigneeId: 2,
    vehicleId: 1,
    from: 'Tirupattur',
    to: 'Bhiwandi',
    packages: [{
      count: 100,
      packingMethod: 'Bags',
      description: 'Textile Goods',
      actualWeight: 5000,
      chargedWeight: 5000,
    }],
    charges: { freight: 25000, aoc: 500, hamali: 1000, bCh: 0, trCh: 0, detentionCh: 0 },
    totalAmount: 26500,
    eWayBillNo: 'EWB1234567890',
    valueGoods: 500000,
    gstPayableBy: GstPayableBy.CONSIGNOR,
    status: LorryReceiptStatus.INVOICED,
    insurance: { hasInsured: false },
    invoiceNo: 'INV-A-001',
    sealNo: 'SEAL123',
  },
  {
    id: 2,
    date: '2024-07-16',
    consignorId: 2,
    consigneeId: 3,
    vehicleId: 2,
    from: 'Bhiwandi',
    to: 'Mumbai',
    packages: [{
      count: 50,
      packingMethod: 'Boxes',
      description: 'Industrial Parts',
      actualWeight: 2000,
      chargedWeight: 2000,
    }],
    charges: { freight: 10000, aoc: 200, hamali: 500, bCh: 0, trCh: 0, detentionCh: 0 },
    totalAmount: 10700,
    eWayBillNo: 'EWB0987654321',
    valueGoods: 800000,
    gstPayableBy: GstPayableBy.CONSIGNEE,
    status: LorryReceiptStatus.IN_TRANSIT,
    insurance: { hasInsured: true, company: 'New India Assurance', policyNo: 'P123', date: '2024-07-16', amount: 800000, risk: 'All Risk' },
    invoiceNo: 'INV-B-002',
    sealNo: 'SEAL456',
  },
  {
    id: 3,
    date: '2024-07-18',
    reportingDate: '2024-07-23',
    deliveryDate: '2024-07-23',
    consignorId: 1,
    consigneeId: 3,
    vehicleId: 3,
    from: 'Tirupattur',
    to: 'Mumbai',
    packages: [{
      count: 20,
      packingMethod: 'Pallets',
      description: 'Chemicals',
      actualWeight: 8000,
      chargedWeight: 8000,
    }],
    charges: { freight: 40000, aoc: 1000, hamali: 2000, bCh: 500, trCh: 500, detentionCh: 0 },
    totalAmount: 44000,
    eWayBillNo: 'EWB1122334455',
    valueGoods: 1200000,
    gstPayableBy: GstPayableBy.TRANSPORTER,
    status: LorryReceiptStatus.INVOICED,
    insurance: { hasInsured: false },
    invoiceNo: 'INV-C-003',
    sealNo: 'SEAL789',
  },
  {
    id: 4,
    date: '2024-07-20',
    reportingDate: '2024-07-25',
    deliveryDate: '2024-07-25',
    consignorId: 2,
    consigneeId: 1,
    vehicleId: 1,
    from: 'Bhiwandi',
    to: 'Tirupattur',
    packages: [{
      count: 75,
      packingMethod: 'Rolls',
      description: 'Fabric',
      actualWeight: 3000,
      chargedWeight: 3000,
    }],
    charges: { freight: 15000, aoc: 300, hamali: 700, bCh: 0, trCh: 0, detentionCh: 0 },
    totalAmount: 16000,
    eWayBillNo: 'EWB6677889900',
    valueGoods: 450000,
    gstPayableBy: GstPayableBy.CONSIGNOR,
    status: LorryReceiptStatus.INVOICED,
    insurance: { hasInsured: false },
    invoiceNo: 'INV-D-004',
    sealNo: 'SEAL012',
  },
   {
    id: 5,
    date: '2024-07-21',
    consignorId: 3,
    consigneeId: 2,
    vehicleId: 2,
    from: 'Mumbai',
    to: 'Bhiwandi',
    packages: [{
      count: 10,
      packingMethod: 'Drums',
      description: 'Oil',
      actualWeight: 2000,
      chargedWeight: 2000,
    }],
    charges: { freight: 8000, aoc: 0, hamali: 0, bCh: 0, trCh: 0, detentionCh: 0 },
    totalAmount: 8000,
    eWayBillNo: 'EWB3344556677',
    valueGoods: 300000,
    gstPayableBy: GstPayableBy.CONSIGNEE,
    status: LorryReceiptStatus.PAID,
    insurance: { hasInsured: false },
    invoiceNo: 'INV-E-005',
    sealNo: 'SEAL345',
  },
  {
    id: 6,
    date: '2024-07-22',
    consignorId: 1,
    consigneeId: 2,
    vehicleId: 3,
    from: 'Tirupattur',
    to: 'Bhiwandi',
    packages: [{
      count: 200,
      packingMethod: 'Cartons',
      description: 'Finished Goods',
      actualWeight: 6000,
      chargedWeight: 6000,
    }],
    charges: { freight: 30000, aoc: 600, hamali: 1200, bCh: 0, trCh: 0, detentionCh: 0 },
    totalAmount: 31800,
    eWayBillNo: 'EWB9988776655',
    valueGoods: 700000,
    gstPayableBy: GstPayableBy.CONSIGNOR,
    status: LorryReceiptStatus.INVOICED,
    insurance: { hasInsured: false },
    invoiceNo: 'INV-F-006',
    sealNo: 'SEAL678',
  }
];

const invoice1Lrs = [mockLorryReceipts[3], mockLorryReceipts[2]]; // LR with id 4 and 3
const invoice1Subtotal = invoice1Lrs.reduce((sum, lr) => sum + lr.totalAmount, 0);
const invoice1Igst = invoice1Subtotal * 0.18;
const invoice1GrandTotal = invoice1Subtotal + invoice1Igst;

const invoice2Lrs = [mockLorryReceipts[4]]; // LR with id 5
const invoice2Subtotal = invoice2Lrs.reduce((sum, lr) => sum + lr.totalAmount, 0);
const invoice2Cgst = invoice2Subtotal * 0.09;
const invoice2Sgst = invoice2Subtotal * 0.09;
const invoice2GrandTotal = invoice2Subtotal + invoice2Cgst + invoice2Sgst;

const invoice3Lrs = [mockLorryReceipts[5]]; // LR with id 6
const invoice3Subtotal = invoice3Lrs.reduce((sum, lr) => sum + lr.totalAmount, 0);
const invoice3Igst = invoice3Subtotal * 0.18;
const invoice3GrandTotal = invoice3Subtotal + invoice3Igst;

const invoice4Lrs = [mockLorryReceipts[0]]; // LR with id 1
const invoice4Subtotal = invoice4Lrs.reduce((sum, lr) => sum + lr.totalAmount, 0);
const invoice4Igst = invoice4Subtotal * 0.18;
const invoice4GrandTotal = invoice4Subtotal + invoice4Igst;

export const mockInvoices: Invoice[] = [
    {
        id: 1,
        date: '2024-07-25',
        customerId: 1, 
        lorryReceipts: invoice1Lrs,
        totalAmount: invoice1Subtotal,
        remarks: 'Payment due in 15 days.',
        gstType: GstType.IGST,
        cgstRate: 0,
        sgstRate: 0,
        igstRate: 18,
        cgstAmount: 0,
        sgstAmount: 0,
        igstAmount: invoice1Igst,
        grandTotal: invoice1GrandTotal,
        isRcm: false,
        isManualGst: false,
    },
    {
        id: 2,
        date: '2024-07-26',
        customerId: 2,
        lorryReceipts: invoice2Lrs,
        totalAmount: invoice2Subtotal,
        remarks: 'Thank you for your business.',
        gstType: GstType.CGST_SGST,
        cgstRate: 9,
        sgstRate: 9,
        igstRate: 0,
        cgstAmount: invoice2Cgst,
        sgstAmount: invoice2Sgst,
        igstAmount: 0,
        grandTotal: invoice2GrandTotal,
        isRcm: false,
        isManualGst: false,
    },
    {
        id: 3,
        date: '2024-07-28',
        customerId: 1,
        lorryReceipts: invoice3Lrs,
        totalAmount: invoice3Subtotal,
        remarks: '',
        gstType: GstType.IGST,
        cgstRate: 0,
        sgstRate: 0,
        igstRate: 18,
        cgstAmount: 0,
        sgstAmount: 0,
        igstAmount: invoice3Igst,
        grandTotal: invoice3GrandTotal,
        isRcm: false,
        isManualGst: false,
    },
    {
        id: 4,
        date: '2024-07-30',
        customerId: 1,
        lorryReceipts: invoice4Lrs,
        totalAmount: invoice4Subtotal,
        remarks: 'New invoice for LR 1',
        gstType: GstType.IGST,
        cgstRate: 0,
        sgstRate: 0,
        igstRate: 18,
        cgstAmount: 0,
        sgstAmount: 0,
        igstAmount: invoice4Igst,
        grandTotal: invoice4GrandTotal,
        isRcm: false,
        isManualGst: false,
    }
];

export const mockPayments: Payment[] = [
    {
        id: 1,
        customerId: 1,
        date: '2024-07-20',
        amount: 25000,
        type: PaymentType.ADVANCE,
        mode: PaymentMode.NEFT,
        referenceNo: 'NEFT12345',
        notes: 'Advance for upcoming shipments'
    },
    {
        id: 2,
        customerId: 1,
        date: '2024-07-27',
        amount: 50000,
        type: PaymentType.RECEIPT,
        mode: PaymentMode.RTGS,
        referenceNo: 'RTGS67890',
        notes: 'Payment towards Invoice #1'
    },
    {
        id: 3,
        customerId: 2,
        date: '2024-07-27',
        amount: 8000,
        type: PaymentType.RECEIPT,
        mode: PaymentMode.CASH,
        notes: 'Cash payment'
    },
    {
        id: 4,
        customerId: 1,
        date: '2024-07-29',
        amount: 10000,
        type: PaymentType.ADVANCE,
        mode: PaymentMode.UPI,
        referenceNo: 'UPI12345678',
        notes: 'Advance payment'
    },
    {
        id: 5,
        customerId: 1,
        date: '2024-07-31',
        amount: 35000,
        type: PaymentType.RECEIPT,
        mode: PaymentMode.CHEQUE,
        referenceNo: 'CHQ-00123',
        notes: 'Part payment for Invoice #3'
    }
];